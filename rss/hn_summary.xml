<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Wed, 11 Sep 2024 18:26:53 GMT</lastBuildDate>
    <item>
      <title>[媒体] 网站：bsky.social</title>
      <link>https://t.me/hn_summary/107991</link>
      <description><![CDATA[Bluesky 现在支持视频了
标题：Bluesky 现在支持视频了
网站：bsky.social

经过多方期待，您现在可以在 Bluesky 上分享视频了！以下是简要信息：每篇帖子可以包含一个视频，最长 60 秒，支持 .mp4、.mpeg、.webm 和 .mov 文件。默认情况下，视频会自动播放，但您可以在“设置”中关闭此功能。更新至移动应用程序 1.91 版或刷新桌面即可开始观看视频。为确保流畅的体验，我们将逐步推出视频发布功能。

您可以为视频添加字幕，每天最多可上传 25 个视频或 10 GB，但此限制可能会发生变化。产品团队与 Trust &amp; Safety 合作，确保环境安全。您必须在上传视频前验证电子邮件，以减少垃圾邮件和滥用行为。用户可以标记视频、举报不当内容，含有非法内容的视频将被删除。屡犯者可能会失去上传视频的权限。每个视频都会接受内容警告或非法材料的扫描。

Bluesky 上的体育、流行文化、政治、突发新闻等内容更加精彩！我们很高兴我们的社区能够继续发展壮大。Bluesky 见！]]></description>
      <guid>https://t.me/hn_summary/107991</guid>
      <pubDate>Wed, 11 Sep 2024 18:26:53 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] Felafax 是一个旨在促进持续培训和微调的框架 [...]</title>
      <link>https://t.me/hn_summary/107990</link>
      <description><![CDATA[显示 HN：在 Google Cloud TPU 上调整 LLaMa3.1
Felafax 是一个框架，旨在促进使用 Google Cloud TPU 对开源大型语言模型 (LLM) 进行持续训练和微调，从而降低 30% 的成本并实现无缝可扩展性。它使用开箱即用的 Jupyter 笔记本简化了设置过程，并支持机器学习研究人员和开发人员轻松配置。该项目旨在使 AI 工作负载在非 NVIDIA 硬件上更易于访问，包括 TPU、AWS Trainium、AMD 和 Intel GPU。Felafax 支持 LLaMa-3.1 和 Gemma2 等模型，这些模型针对在 Cloud TPU 上进行快速、全精度训练进行了优化。设置过程简化，只需最少的步骤即可开始。]]></description>
      <guid>https://t.me/hn_summary/107990</guid>
      <pubDate>Wed, 11 Sep 2024 18:26:48 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 标题：Fman 构建系统</title>
      <link>https://t.me/hn_summary/107989</link>
      <description><![CDATA[Fman 构建系统
标题：Fman 构建系统

网站：build-system.fman.io

摘要：

Fman 构建系统 (fbs) 为 GPL 许可下的开源项目提供免费版本，而对于那些希望将代码保密的用户，则提供专业版。用户还必须遵守 Qt 及其 Python 绑定的许可条款，例如 PySide6 (LGPL) 和 PyQt (GPL)。 Fbs 集成了 PyInstaller、NSIS 和 .dmg/.deb 文件等顶级工具，以简化跨不同平台的打包和安装，为开发人员节省大量时间。fbs 最初是为跨平台文件管理器 fman 开发的，它利用 Python 和 Qt 的效率，解决了常见和极端情况的问题，而无需进行大量调试。值得注意的是，fbs 的创建是为了避免 Electron 的资源密集型特性，使其成为开发人员独特而高效的解决方案。]]></description>
      <guid>https://t.me/hn_summary/107989</guid>
      <pubDate>Wed, 11 Sep 2024 18:25:44 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在 Netflix 技术博客文章《使用 eBPF 进行嘈杂邻居检测》中，作者 [...]</title>
      <link>https://t.me/hn_summary/107988</link>
      <description><![CDATA[使用 eBPF 检测嘈杂邻居
在 Netflix Tech Blog 的题为“使用 eBPF 检测嘈杂邻居”的文章中，作者解释了如何使用 eBPF（扩展伯克利数据包过滤器）检测容器化环境中的嘈杂邻居。通过利用 sched_wakeup 和 sched_switch 钩子，系统可以跟踪进程何时可运行以及 CPU 何时在进程之间切换。时间戳存储在 eBPF 哈希图中，以计算运行队列延迟。使用 kfuncs 访问进程的 cgroup ID，以确保安全检索受 RCU 保护的信息。然后，数据通过 eBPF 环形缓冲区发送到用户空间，并使用速率限制器来管理 CPU 使用率。指标被发送到 Atlas，区分系统服务和容器进程。runq.latency 和 sched.switch.out 的双重指标有助于准确识别嘈杂邻居问题，避免由于 CPU 配额限制而导致的错误归因。案例研究显示了服务器的基线延迟，突出了这种方法的有效性。

争议：无突出内容。

独特/巧妙：使用 eBPF 进行实时、低开销监控以及使用双重指标方法准确诊断嘈杂邻居问题特别巧妙。]]></description>
      <guid>https://t.me/hn_summary/107988</guid>
      <pubDate>Wed, 11 Sep 2024 18:25:40 GMT</pubDate>
    </item>
    <item>
      <title>网站：www.exec.com</title>
      <link>https://t.me/hn_summary/107987</link>
      <description><![CDATA[展示 HN：通过基于语音的 AI 角色扮演练习软技能
标题：展示 HN：通过基于语音的 AI 角色扮演练习软技能
网站：www.exec.com

发现一款突破性的工具，旨在通过由 AI 提供支持的交互式语音角色扮演来增强团队的软技能。这个创新平台不仅促进了实践技能发展，还提供全面的团队分析。深入了解团队的进展，确定技能差距，并确保整个组织的信息传递一致。这种独特的方法利用先进的人工智能来创建逼真的场景，提供动态有效的培训体验。]]></description>
      <guid>https://t.me/hn_summary/107987</guid>
      <pubDate>Wed, 11 Sep 2024 18:12:31 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 中国将培训数千名外国执法人员，推动“更加公正的执法”[...]</title>
      <link>https://t.me/hn_summary/107986</link>
      <description><![CDATA[中国为海外执法人员培训数千人，以建立“更加公平”的世界秩序
中国公安部部长王小红表示，中国将培训数千名外国执法人员，以促进“更加公平、合理和高效”的世界秩序。王小红在连云港举行的全球安全论坛上发表讲话时宣布，计划向有需要的国家派遣警务顾问，旨在提高他们的执法能力。这一举措是中国更广泛的全球安全倡议 (GSI) 的一部分，该倡议由习近平于 2022 年发起，旨在将中国定位为全球安全领导者。然而，人权组织担心，这些培训计划可能会引入独裁策略，并优先考虑中国的商业利益，特别是在非洲。GSI 也被视为重塑美国主导的世界秩序的战略。王指出，中国去年已经培训了 2700 名外国军官，并计划再培训 1000 名非洲军官。此前，中国与中亚国家和东帝汶签署了加强安全合作的协议。此前与所罗门群岛签署的协议引发了美国及其盟友的担忧。]]></description>
      <guid>https://t.me/hn_summary/107986</guid>
      <pubDate>Wed, 11 Sep 2024 18:10:27 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 2023 年 3 月，Adobe 推出了 Firefly，这是一套具有 rap [...] 的生成式 AI 模型。</title>
      <link>https://t.me/hn_summary/107985</link>
      <description><![CDATA[Adobe Firefly 视频模型
2023 年 3 月，Adobe 推出了 Firefly，这是一套生成式 AI 模型，已迅速成为 Creative Cloud 和 Express 不可或缺的一部分，为 Photoshop 中的生成填充和 Lightroom 中的生成移除等功能提供支持。社区生成了超过 120 亿张图像和矢量图，Firefly 的采用速度非常快。现在，Adobe 推出了 Firefly 视频模型，旨在彻底改变 Premiere Pro 等工具中的视频编辑。该模型在设计时考虑到了创作者的权利，提供文本转视频、填补空白和生成大气元素等功能，同时确保商业安全。测试版预计将于今年晚些时候发布，有望简化工作流程并增强创意可能性。注册候补名单以保持更新。]]></description>
      <guid>https://t.me/hn_summary/107985</guid>
      <pubDate>Wed, 11 Sep 2024 18:10:23 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] columbialawreview.org 上的文章“算法工资歧视”探讨了算法工资歧视的风险 [...]</title>
      <link>https://t.me/hn_summary/107984</link>
      <description><![CDATA[算法工资歧视
columbialawreview.org 上的文章“算法工资歧视”探讨了工作场所监控的兴起以及使用机器学习来确定工人工资的情况。在过去二十年里，技术进步使雇主能够广泛监控员工，收集有关他们的活动、习惯甚至生物特征信息的数据。这些数据随后被用于做出有关招聘、生产力和薪酬的决策，这往往导致“算法工资歧视”。这种做法涉及根据考虑各种因素的复杂、不透明的算法向工人支付不同的工资，从而造成很大的不确定性和潜在的薪酬不公平。

一个值得注意的例子是亚马逊在送货车上使用人工智能摄像头，这导致了错误的处罚和拒绝给司机奖金。文章认为，这种制度不仅会犯错误，还反映了一个更广泛的问题，即逃避就业法和对工人施加数字控制。文章强调了算法工资歧视如何导致同工不同酬，并造成一个充满不可预测性和操纵性的劳动力市场。

争议在于这种做法的道德影响，特别是因为它们影响到移民和少数族裔等弱势群体。文章呼吁对算法工资歧视进行不可放弃的禁令，以保护工人免受这些伤害。它还讨论了工人和倡导者如何使用数据隐私法和合作框架来解决这些问题，尽管这些措施的有效性受到数字化工作场所的权力动态的限制。]]></description>
      <guid>https://t.me/hn_summary/107984</guid>
      <pubDate>Wed, 11 Sep 2024 18:04:17 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] CSS 触发器 – 每个 CSS 属性的性能如何？</title>
      <link>https://t.me/hn_summary/107983</link>
      <description><![CDATA[CSS Triggers – 每个 CSS 属性的性能如何？
CSS Triggers 探讨了更改各种 CSS 属性对性能的影响。更改影响元素几何形状的属性（例如位置或大小）会触发布局操作、绘制和合成，这些操作可能会耗费大量资源。相反，更改不影响几何形状的视觉属性仍会触发绘制，这是一个成本高昂的过程。最有效的更改是那些既不影响几何形状也不需要绘制的更改，因为它们可以由 GPU 的合成器线程处理。该网站由 Andrico Karoulla 翻拍自 Paul Lewis 和 Surma 的原作，旨在寻求更新的浏览器数据并通过 GitHub 邀请贡献。如需了解更多 Web 开发见解，作者提供了一份时事通讯。]]></description>
      <guid>https://t.me/hn_summary/107983</guid>
      <pubDate>Wed, 11 Sep 2024 17:25:58 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在这篇文章中，我记录了从头开始用 Go 构建 HTTP 服务器的历程，[...]</title>
      <link>https://t.me/hn_summary/107982</link>
      <description><![CDATA[从头开始用 Go 编写 HTTP 服务器：第 1 部分
在这篇文章中，我记录了从头开始用 Go 构建 HTTP 服务器的历程，灵感来自 CodeCrafters 挑战。我完成了 Golang 的“构建自己的 HTTP 服务器”课程，该课程于 2024 年 7 月免费提供。该平台每次提交后的自动测试特别有用，尽管它缺乏特定于语言的最佳实践，促使我重构代码以获得更好的开发人员体验 (DX)。

挑战涉及几个步骤：绑定到端口、以 200 状态代码响应、处理不同的路由以及管理并发连接。我还实现了改进，例如使用 HTTPRequest 结构并确保使用 defer conn.Close() 正确关闭连接。最后的步骤包括读取请求主体和返回文件。

争议：该平台缺乏特定语言的最佳实践，这可能会被某些用户视为缺点。

独特/巧妙：使用 defer conn.Close() 来确保连接始终正确关闭，这是一个巧妙的举动。（基于 43% 的故事文本的总结。）]]></description>
      <guid>https://t.me/hn_summary/107982</guid>
      <pubDate>Wed, 11 Sep 2024 17:23:52 GMT</pubDate>
    </item>
    </channel>
</rss>